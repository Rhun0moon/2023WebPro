{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tjs45\\\\Desktop\\\\\\uC6F9\\uAC1C\\uBC1C\\\\code\\\\FRONT_WORK\\\\front_day04\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// <hr> 아래 / 할일(<li>태그, 체크박스, todo, 삭제버튼, 수정버튼) return \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ItemRow(_ref) {\n  _s();\n  let {\n    item,\n    removeItem,\n    updateItem\n  } = _ref;\n  const [mode, setMode] = useState(false);\n  const [title, setTitle] = useState(item.title);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        checked: item.done ? \"checked\" : \"\",\n        type: \"checkbox\",\n        onChange: e => {\n          item.done = e.target.checked;\n          updateItem(item);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        className: item.done ? \"done\" : \"not-done\",\n        type: \"text\",\n        disabled: mode ? \"\" : \"disabled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          removeItem(item.no);\n        },\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          setMode(!mode);\n          if (mode) {\n            item.title = title;\n            updateItem(item);\n          } else {}\n        },\n        children: mode ? \"수정완료\" : \"수정\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n// <hr> 위 / 추가 input return\n_s(ItemRow, \"0tImNTaXY1f64T79y6eXEdItz3o=\");\n_c = ItemRow;\nfunction InputItem(_ref2) {\n  _s2();\n  let {\n    appendItem\n  } = _ref2;\n  // input의 value로 사용 할 경우 초기값 필수.\n  const [newWork, setNewWork] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\uD560 \\uC77C :\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newWork,\n      onChange: e => {\n        setNewWork(e.target.value);\n      },\n      onKeyDown: e => {\n        if (e.key === \"Enter\") {\n          appendItem(newWork);\n          setNewWork(\"\");\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        appendItem(newWork);\n        setNewWork(\"\");\n      },\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n// <hr> 아래 / div > ol (ItemRoW 부름)\n_s2(InputItem, \"ZXNn82ysnQI4MyVxJqA8L3U3dg8=\");\n_c2 = InputItem;\nfunction TodoList(_ref3) {\n  let {\n    todoList,\n    removeItem,\n    updateItem\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      type: \"A\",\n      children: todoList.map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(ItemRow, {\n          item: item,\n          removeItem: removeItem,\n          updateItem: updateItem\n        }, item.no, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n_c3 = TodoList;\nfunction App(props) {\n  _s3();\n  const [todoList, setTodoList] = useState([]);\n  const [noCount, setNoCount] = useState(1);\n\n  // useEffect 함수 = 리액트 컴포넌트가 렌더링 될 때마다 특정 작업을 실행할 수 있도록 하는 HOOK\n  useEffect(() => {\n    // localStorage에 데이터가 있으면 로드한다.\n    // 저장은 문자열로 한다.\n    console.log(\">>>>> useEffect ...\");\n    const localStorageData = localStorage.getItem(\"todoListData\");\n    if (localStorageData) {\n      let objData = JSON.parse(localStorageData);\n      setTodoList(objData.todoList);\n      setNoCount(objData.noCount);\n      console.log(\">>>>> data load 완료\");\n      console.dir(objData);\n    }\n  }, []);\n  function saveLocalStorage(newList, noCnt) {\n    localStorage.setItem(\"todoListData\", JSON.stringify({\n      todoList: newList,\n      noCount: noCnt\n    }) // 저장은 문자열로 저장\n    );\n\n    console.log(\">>>>> localStorage에 저장 완료\");\n  }\n  function appendItem(newItem) {\n    let newList = [...todoList, {\n      no: noCount,\n      title: newItem,\n      done: false\n    }];\n    let noCnt = noCount + 1;\n    setTodoList(newList);\n    setNoCount(noCnt);\n    saveLocalStorage(newList, noCnt);\n  }\n  function removeItem(no) {\n    var newList = todoList.filter((item, idx) => {\n      return item.no != no;\n    });\n    setTodoList(newList);\n    saveLocalStorage(newList, noCount);\n  }\n  function updateItem(item) {\n    //console.dir(\"updateItem: \" + JSON.stringify(item)) ;\n    // const idx = todoList.findIndex((todo, idx) => {\n    //   return todo.no === item.no;\n    // });\n    // todoList[idx] = item;\n    const newList = [...todoList];\n    setTodoList(newList);\n    saveLocalStorage(newList, noCount);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n      appendItem: appendItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: todoList,\n      removeItem: removeItem,\n      updateItem: updateItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s3(App, \"rLhxNLT/AXjKNr3IFH33U+PPVB0=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ItemRow\");\n$RefreshReg$(_c2, \"InputItem\");\n$RefreshReg$(_c3, \"TodoList\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ItemRow","item","removeItem","updateItem","mode","setMode","title","setTitle","done","e","target","checked","value","no","InputItem","appendItem","newWork","setNewWork","key","TodoList","todoList","map","idx","App","props","setTodoList","noCount","setNoCount","console","log","localStorageData","localStorage","getItem","objData","JSON","parse","dir","saveLocalStorage","newList","noCnt","setItem","stringify","newItem","filter"],"sources":["C:/Users/tjs45/Desktop/웹개발/code/FRONT_WORK/front_day04/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\n// <hr> 아래 / 할일(<li>태그, 체크박스, todo, 삭제버튼, 수정버튼) return \r\nfunction ItemRow({ item, removeItem, updateItem }) {\r\n    const [mode, setMode] = useState(false);\r\n    const [title, setTitle] = useState(item.title);\r\n    return (\r\n        <li>\r\n        <p>\r\n            <input\r\n                checked={item.done ? \"checked\" : \"\"}\r\n                type=\"checkbox\"\r\n                onChange={(e) => {\r\n                item.done = e.target.checked;\r\n                updateItem(item);\r\n                }}\r\n            />\r\n            <input\r\n                value={title}\r\n                onChange={(e) => {\r\n                    setTitle(e.target.value);\r\n                }}\r\n                className={item.done ? \"done\" : \"not-done\"}\r\n                type=\"text\"\r\n                disabled={mode ? \"\" : \"disabled\"}\r\n            />\r\n            <button\r\n                onClick={(e) => {\r\n                    removeItem(item.no);\r\n                }}\r\n            >\r\n                삭제\r\n            </button>\r\n            <button\r\n                onClick={(e) => {\r\n                    setMode(!mode);\r\n                    if (mode) {\r\n                        item.title = title;\r\n                        updateItem(item);\r\n                    } else {\r\n                        \r\n                    }\r\n                }}\r\n            >\r\n                {mode ? \"수정완료\" : \"수정\"}\r\n            </button>\r\n        </p>\r\n        </li>\r\n    );\r\n}\r\n\r\n// <hr> 위 / 추가 input return\r\nfunction InputItem({ appendItem }) {\r\n    // input의 value로 사용 할 경우 초기값 필수.\r\n    const [newWork, setNewWork] = useState(\"\");\r\n    return (\r\n        <div>\r\n            할 일 :\r\n            <input\r\n                type=\"text\"\r\n                value={newWork}\r\n                onChange={(e) => {\r\n                    setNewWork(e.target.value);\r\n                }}\r\n                onKeyDown={(e) => {\r\n                    if (e.key === \"Enter\") {\r\n                        appendItem(newWork);\r\n                        setNewWork(\"\");\r\n                    }\r\n                }}\r\n            />\r\n            <button\r\n                onClick={(e) => {\r\n                appendItem(newWork);\r\n                setNewWork(\"\");\r\n                }}\r\n            >\r\n                추가\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\n// <hr> 아래 / div > ol (ItemRoW 부름)\r\nfunction TodoList({ todoList, removeItem, updateItem }) {\r\n     return (\r\n        <div>\r\n        <ol type=\"A\">\r\n            {todoList.map((item, idx) => {\r\n                return (\r\n                    <ItemRow\r\n                        key={item.no}\r\n                        item={item}\r\n                        removeItem={removeItem}\r\n                        updateItem={updateItem}\r\n                    />\r\n                );\r\n            })}\r\n        </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction App(props) {\r\n    const [todoList, setTodoList] = useState([]);\r\n    const [noCount, setNoCount] = useState(1);\r\n\r\n    // useEffect 함수 = 리액트 컴포넌트가 렌더링 될 때마다 특정 작업을 실행할 수 있도록 하는 HOOK\r\n    useEffect(() => {\r\n        // localStorage에 데이터가 있으면 로드한다.\r\n        // 저장은 문자열로 한다.\r\n        console.log(\">>>>> useEffect ...\");\r\n        const localStorageData = localStorage.getItem(\"todoListData\");\r\n        if (localStorageData) {\r\n            let objData = JSON.parse(localStorageData);\r\n            setTodoList(objData.todoList);\r\n            setNoCount(objData.noCount);\r\n            console.log(\">>>>> data load 완료\");\r\n            console.dir(objData);\r\n        }\r\n    }, []);\r\n\r\n    function saveLocalStorage(newList, noCnt) {\r\n        localStorage.setItem(\r\n            \"todoListData\",\r\n            JSON.stringify({ todoList: newList, noCount: noCnt }) // 저장은 문자열로 저장\r\n        );\r\n        console.log(\">>>>> localStorage에 저장 완료\");\r\n    }\r\n\r\n    function appendItem(newItem) {\r\n        let newList = [...todoList, { no: noCount, title: newItem, done: false }];\r\n        let noCnt = noCount + 1;\r\n        setTodoList(newList);\r\n        setNoCount(noCnt);\r\n        saveLocalStorage(newList, noCnt);\r\n    }\r\n\r\n    function removeItem(no) {\r\n        var newList = todoList.filter((item, idx) => {\r\n            return item.no != no;\r\n        });\r\n        setTodoList(newList);\r\n        saveLocalStorage(newList, noCount);\r\n    }\r\n\r\n    function updateItem(item) {\r\n        //console.dir(\"updateItem: \" + JSON.stringify(item)) ;\r\n        // const idx = todoList.findIndex((todo, idx) => {\r\n        //   return todo.no === item.no;\r\n        // });\r\n        // todoList[idx] = item;\r\n        const newList = [...todoList];\r\n        setTodoList(newList);\r\n        saveLocalStorage(newList, noCount);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h1>Todo List</h1>\r\n        <InputItem appendItem={appendItem} />\r\n        <hr />\r\n        <TodoList\r\n            todoList={todoList}\r\n            removeItem={removeItem}\r\n            updateItem={updateItem}\r\n        />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}