{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tjs45\\\\Desktop\\\\\\uC6F9\\uAC1C\\uBC1C\\\\code\\\\FRONT_WORK\\\\front_day04\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ItemRow(_ref) {\n  _s();\n  let {\n    item,\n    removeItem,\n    updateItem\n  } = _ref;\n  const [mode, setMode] = useState(false);\n  const [title, setTitle] = useState(item.title);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: e => {\n          item.done = e.target.checked;\n          updateItem(item);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        className: item.done ? \"done\" : \"not-done\",\n        type: \"text\",\n        disabled: mode ? \"\" : \"disabled\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          removeItem(item.no);\n        },\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          setMode(!mode);\n          if (mode) {\n            item.title = title;\n            updateItem(item);\n          } else {}\n        },\n        children: mode ? \"수정완료\" : \"수정\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemRow, \"0tImNTaXY1f64T79y6eXEdItz3o=\");\n_c = ItemRow;\nfunction InputItem(_ref2) {\n  _s2();\n  let {\n    appendItem\n  } = _ref2;\n  // input의 value로 사용 할 경우 초기값 필수.\n  const [newWork, setNewWork] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\uD560\\uC77C :\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newWork,\n      onChange: e => {\n        setNewWork(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        appendItem(newWork);\n      },\n      children: \"\\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n// Redux를 이용하면 해결된다.\n_s2(InputItem, \"ZXNn82ysnQI4MyVxJqA8L3U3dg8=\");\n_c2 = InputItem;\nfunction TodoList(_ref3) {\n  let {\n    todoList,\n    removeItem,\n    updateItem\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: todoList.map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(ItemRow, {\n          item: item,\n          removeItem: removeItem,\n          updateItem: updateItem\n        }, item.no, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_c3 = TodoList;\nfunction App(props) {\n  _s3();\n  // 과제 1 : 취소선 기능 추가.\n  // 과제 2 : todoList 데이터를 localStorage에 저장.\n  /*\r\n  const [todoList, setTodoList] = useState([\r\n    { no: 1, title: \"점심 먹기\", done: false },\r\n    { no: 2, title: \"산책 하기\", done: false },\r\n    { no: 3, title: \"배운 것 복습하기\", done: false },\r\n    { no: 4, title: \"내일 수업 예습하기\", done: false },\r\n  ]);\r\n  const [noCount, setNoCount] = useState(5);\r\n   */\n\n  const [todoList, setTodoList] = useState([]);\n  const [noCount, setNoCount] = useState(1);\n  useEffect(() => {\n    // LocalStorage에 데이터가 있으면 로드한다.\n    // 저장은 문자열로 한다.\n    console.log(\">>> useEffect\");\n    const localStorageData = localStorage.getItem(\"todoListData\");\n    if (localStorageData) {\n      let objData = JSON.parse(localStorageData);\n      setTodoList(objData.todoList);\n      setNoCount(objData.noCount);\n      console.log(\">>> data load 완료\");\n      console.dir(objData);\n    }\n  }, []);\n  function saveLocalStorage(newList, noCnt) {\n    localStorage.setItem(\"todoListData\", {\n      todoList: newList,\n      noCount\n    });\n    console.log(\">>> localStorage에 저장 완료\");\n  }\n  function appendItem(newItem) {\n    // console.log(noCount);\n    // setTodoList([...todoList, { no: noCount, title: newItem, done: false }]);\n    let newList = [...todoList, {\n      no: noCount,\n      title: newItem,\n      done: false\n    }];\n    let noCnt = noCount + 1;\n    setTodoList(newList);\n    setNoCount(noCnt);\n    saveLocalStorage(newList, nocnt);\n  }\n  function removeItem(no) {\n    var newList = todoList.filter((item, idx) => {\n      return item.no != no;\n    });\n    setTodoList(newList);\n  }\n  function updateItem(item) {\n    //console.dir(\"updateItem: \" + JSON.stringify(item)) ;\n    const idx = todoList.findIndex((todo, idx) => {\n      return todo.no === item.no;\n    });\n    todoList[idx] = item;\n    setTodoList([...todoList]);\n    console.dir(todoList);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n      appendItem: appendItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todoList: todoList,\n      removeItem: removeItem,\n      updateItem: updateItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s3(App, \"rLhxNLT/AXjKNr3IFH33U+PPVB0=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ItemRow\");\n$RefreshReg$(_c2, \"InputItem\");\n$RefreshReg$(_c3, \"TodoList\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","ItemRow","item","removeItem","updateItem","mode","setMode","title","setTitle","e","done","target","checked","value","no","InputItem","appendItem","newWork","setNewWork","TodoList","todoList","map","idx","App","props","setTodoList","noCount","setNoCount","useEffect","console","log","localStorageData","localStorage","getItem","objData","JSON","parse","dir","saveLocalStorage","newList","noCnt","setItem","newItem","nocnt","filter","findIndex","todo"],"sources":["C:/Users/tjs45/Desktop/웹개발/code/FRONT_WORK/front_day04/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction ItemRow({ item, removeItem, updateItem }) {\r\n  const [mode, setMode] = useState(false);\r\n  const [title, setTitle] = useState(item.title);\r\n  return (\r\n    <li>\r\n      <p>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={(e) => {\r\n            item.done = e.target.checked;\r\n            updateItem(item);\r\n          }}\r\n        />\r\n        <input\r\n          value={title}\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n          }}\r\n          className={item.done ? \"done\" : \"not-done\"}\r\n          type=\"text\"\r\n          disabled={mode ? \"\" : \"disabled\"}\r\n        />\r\n        <button\r\n          onClick={(e) => {\r\n            removeItem(item.no);\r\n          }}\r\n        >\r\n          삭제\r\n        </button>\r\n        <button\r\n          onClick={(e) => {\r\n            setMode(!mode);\r\n            if (mode) {\r\n              item.title = title;\r\n              updateItem(item);\r\n            } else {\r\n            }\r\n          }}\r\n        >\r\n          {mode ? \"수정완료\" : \"수정\"}\r\n        </button>\r\n      </p>\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction InputItem({ appendItem }) {\r\n  // input의 value로 사용 할 경우 초기값 필수.\r\n  const [newWork, setNewWork] = useState(\"\");\r\n  return (\r\n    <div>\r\n      할일 :\r\n      <input\r\n        type=\"text\"\r\n        value={newWork}\r\n        onChange={(e) => {\r\n          setNewWork(e.target.value);\r\n        }}\r\n      />\r\n      <button\r\n        onClick={(e) => {\r\n          appendItem(newWork);\r\n        }}\r\n      >\r\n        추가\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Redux를 이용하면 해결된다.\r\nfunction TodoList({ todoList, removeItem, updateItem }) {\r\n  return (\r\n    <div>\r\n      <ol>\r\n        {todoList.map((item, idx) => {\r\n          return (\r\n            <ItemRow\r\n              key={item.no}\r\n              item={item}\r\n              removeItem={removeItem}\r\n              updateItem={updateItem}\r\n            />\r\n          );\r\n        })}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App(props) {\r\n  // 과제 1 : 취소선 기능 추가.\r\n  // 과제 2 : todoList 데이터를 localStorage에 저장.\r\n  /*\r\n  const [todoList, setTodoList] = useState([\r\n    { no: 1, title: \"점심 먹기\", done: false },\r\n    { no: 2, title: \"산책 하기\", done: false },\r\n    { no: 3, title: \"배운 것 복습하기\", done: false },\r\n    { no: 4, title: \"내일 수업 예습하기\", done: false },\r\n  ]);\r\n  const [noCount, setNoCount] = useState(5);\r\n   */\r\n\r\n  const [todoList, setTodoList] = useState([]);\r\n  const [noCount, setNoCount] = useState(1);\r\n\r\n  useEffect(()=>{\r\n    // LocalStorage에 데이터가 있으면 로드한다.\r\n    // 저장은 문자열로 한다.\r\n    console.log(\">>> useEffect\");\r\n    const localStorageData = localStorage.getItem(\"todoListData\");\r\n    if(localStorageData){\r\n        let objData = JSON.parse(localStorageData);\r\n        setTodoList(objData.todoList);\r\n        setNoCount(objData.noCount);\r\n        console.log(\">>> data load 완료\");\r\n        console.dir(objData);\r\n    }\r\n  }, []);\r\n\r\n  function saveLocalStorage(newList, noCnt){\r\n    localStorage.setItem(\r\n        \"todoListData\", \r\n        {todoList:newList, noCount}\r\n    );\r\n    console.log(\">>> localStorage에 저장 완료\")\r\n  }\r\n\r\n\r\n  function appendItem(newItem) {\r\n    // console.log(noCount);\r\n    // setTodoList([...todoList, { no: noCount, title: newItem, done: false }]);\r\n    let newList = [...todoList, { no: noCount, title: newItem, done: false }];\r\n    let noCnt = noCount + 1;\r\n    setTodoList(newList);\r\n    setNoCount(noCnt);\r\n    saveLocalStorage(newList, nocnt)\r\n\r\n  }\r\n  function removeItem(no) {\r\n    var newList = todoList.filter((item, idx) => {\r\n      return item.no != no;\r\n    });\r\n    setTodoList(newList);\r\n  }\r\n\r\n  function updateItem(item) {\r\n    //console.dir(\"updateItem: \" + JSON.stringify(item)) ;\r\n    const idx = todoList.findIndex((todo, idx) => {\r\n      return todo.no === item.no;\r\n    });\r\n    todoList[idx] = item;\r\n    setTodoList([...todoList]);\r\n    console.dir(todoList);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Todo List</h1>\r\n      <InputItem appendItem={appendItem} />\r\n      <hr />\r\n      <TodoList\r\n        todoList={todoList}\r\n        removeItem={removeItem}\r\n        updateItem={updateItem}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}